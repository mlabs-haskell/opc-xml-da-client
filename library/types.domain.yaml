# XML-DA base types

GetStatus:
  product:
    localeId: Maybe Text
    clientRequestHandle: Maybe Text

GetStatusResponse:
  product:
    result: Maybe ReplyBase
    status: Maybe ServerStatus

ReplyBase:
  product:
    rcvTime: UTCTime
    replyTime: UTCTime
    clientRequestHandle: Maybe Text
    revisedLocaleId: Maybe Text
    serverState: ServerState

ServerState:
  enum:
    - running
    - failed
    - noConfig
    - suspended
    - test
    - commFault

ServerStatus:
  product:
    statusInfo: Maybe Text
    vendorInfo: Maybe Text
    supportedLocaleIds: Vector Text
    supportedInterfaceVersions: Vector InterfaceVersion
    startTime: UTCTime
    productVersion: Maybe Text

InterfaceVersion:
  product:
    major: Int
    minor: Int

Read:
  product:
    options: Maybe RequestOptions
    itemList: Maybe ReadRequestItemList

RequestOptions:
  product:
    returnErrorText: Bool
    returnDiagnosticInfo: Bool
    returnItemTime: Bool
    returnItemPath: Bool
    returnItemName: Bool
    requestDeadline: Maybe UTCTime
    clientRequestHandle: Maybe Text
    localeId: Maybe Text

ReadRequestItemList:
  product:
    items: Vector ReadRequestItem
    itemPath: Maybe Text
    reqType: Maybe QName
    maxAge: Maybe Int32

ReadRequestItem:
  product:
    itemPath: Maybe Text
    reqType: Maybe QName
    itemName: Maybe Text
    clientItemHandle: Maybe Text
    maxAge: Maybe Int32

ReadResponse:
  product:
    readResult: Maybe ReplyBase
    rItemList: Maybe ReplyItemList
    errors: Vector OpcError

ReplyItemList:
  product:
    items: Vector ItemValue
    reserved: Maybe Text

ItemValue:
  product:
    diagnosticInfo: Maybe Text
    value: Maybe Value
    quality: Maybe OpcQuality
    valueTypeQualifier: Maybe QName
    itemPath: Maybe Text
    itemName: Maybe Text
    clientItemHandle: Maybe Text
    timestamp: Maybe UTCTime
    resultId: Maybe QName

Value:
  product:
    type: QName
    xml: "[Xml.Node]"

OpcQuality:
  product:
    qualityField: QualityBits
    limitField: LimitBits
    vendorField: Word8

QualityBits:
  enum:
    - bad
    - badConfigurationError
    - badNotConnected
    - badDeviceFailure
    - badSensorFailure
    - badLastKnownValue
    - badCommFailure
    - badOutOfService
    - badWaitingForInitialData
    - uncertain
    - uncertainLastUsableValue
    - uncertainSensorNotAccurate
    - uncertainEUExceeded
    - uncertainSubNormal
    - good
    - goodLocalOverride

LimitBits:
  enum:
    - none
    - low
    - high
    - constant

OpcError:
  product:
    text: Maybe Text
    id: QName

# TODO: This would be better just as unboxed Vector Float.
ArrayOfFloat:
  product:
    float: Vector Float

# TODO: This would be better just as unboxed Vector Int32.
ArrayOfInt:
  product:
    int: Vector Int32

# TODO: This would be better just as unboxed Vector Word32.
ArrayOfUnsignedInt:
  product:
    unsignedInt: Vector Word32

# TODO: This would be better just as unboxed Vector Int64
ArrayOfLong:
  product:
    long: Vector Int64

# TODO: This would be better just as unboxed Vector Word64
ArrayOfUnsignedLong:
  product:
    unsignedLong: Vector Word64

# TODO: This would be better just as unboxed Vector Double.
ArrayOfDouble:
  product:
    double: Vector Double

# TODO: This would be better just as unboxed Vector Word16.
ArrayOfUnsignedShort:
  product:
    unsignedShort: Vector Word16

# TODO: This would be better just as unboxed Vector Bool.
ArrayOfBoolean:
  product:
    boolean: Vector Bool

# TODO: This would be better just as Vector (Maybe Text).
ArrayOfString:
  product:
    string: Vector (Maybe Text)

# TODO: This would be better just as Vector UTCTime.
ArrayOfDateTime:
  product:
    dateTime: Vector UTCTime

# TODO: This would be better just as Vector (Maybe Xml.Element).
ArrayOfAnyType:
  product:
    anyType: Vector (Maybe Xml.Element)

# TODO: This would be better as Vector Scientific.
ArrayOfDecimal:
  product:
    decimal: Vector Scientific

# TODO: This would be better just as unboxed Vector Int8.
ArrayOfByte:
  product:
    byte: Vector Int8

# TODO: This would be better just as unboxed Vector Int16.
ArrayOfShort:
  product:
    short: Vector Int16

Write:
  product:
    options: Maybe RequestOptions
    itemList: Maybe WriteRequestItemList
    returnValuesOnReply: Bool

WriteRequestItemList:
  product:
    items: Vector ItemValue
    itemPath: Maybe Text

WriteResponse:
  product:
    writeResult: Maybe ReplyBase
    rItemList: Maybe ReplyItemList
    errors: Vector OpcError

Subscribe:
  product:
    options: Maybe RequestOptions
    itemList: Maybe SubscribeRequestItemList
    returnValuesOnReply: Bool
    subscriptionPingRate: Maybe Int32

SubscribeRequestItemList:
  product:
    items: Vector SubscribeRequestItem
    itemPath: Maybe Text
    reqType: Maybe QName
    deadband: Maybe Float
    requestedSamplingRate: Maybe Int32
    enableBuffering: Maybe Bool

SubscribeRequestItem:
  product:
    itemPath: Maybe Text
    reqType: Maybe QName
    itemName: Maybe Text
    clientItemHandle: Maybe Text
    deadband: Maybe Float
    requestedSamplingRate: Maybe Int32
    enableBuffering: Maybe Bool

SubscribeReplyItemList:
  product:
    items: Vector SubscribeItemValue
    revisedSamplingRate: Maybe Int32

SubscribeItemValue:
  product:
    # We're avoiding a Maybe here, since the spec says that it has minOccurs set to 0
    # only to satisfy the needs of some codegen tools.
    # See Section 3.5.2 of the spec.
    itemValue: ItemValue
    revisedSamplingRate: Maybe Int

SubscribeResponse:
  product:
    subscribeResult: Maybe ReplyBase
    rItemList: Maybe SubscribeReplyItemList
    errors: Vector OpcError
    serverSubHandle: Maybe Text

SubscriptionPolledRefresh:
  product:
    options: Maybe RequestOptions
    serverSubHandles: Vector Text
    holdTime: Maybe UTCTime
    waitTime: Int32
    returnAllItems: Bool

SubscribePolledRefreshReplyItemList:
  product:
    items: Vector ItemValue
    subscriptionHandle: Maybe Text

SubscriptionPolledRefreshResponse:
  product:
    subscriptionPolledRefreshResult: Maybe ReplyBase
    invalidServerSubHandles: Vector Text
    rItemList: Vector SubscribePolledRefreshReplyItemList
    errors: Vector OpcError
    dataBufferOverflow: Bool

SubscriptionCancel:
  product:
    serverSubHandle: Maybe Text
    clientRequestHandle: Maybe Text

SubscriptionCancelResponse:
  product:
    clientRequestHandle: Maybe Text

Browse:
  product:
    propertyNames: Vector QName
    localeId: Maybe Text
    clientRequestHandle: Maybe Text
    itemPath: Maybe Text
    itemName: Maybe Text
    continuationPoint: Maybe Text
    maxElementsReturned: Int32
    browseFilter: BrowseFilter
    elementNameFilter: Maybe Text
    vendorFilter: Maybe Text
    returnAllProperties: Bool
    returnAllPropertyValues: Bool
    returnErrorText: Bool

BrowseFilter:
  enum:
    - all
    - branch
    - item

BrowseElement:
  product:
    properties: Vector ItemProperty
    name: Maybe Text
    itemPath: Maybe Text
    itemName: Maybe Text
    isItem: Bool
    hasChildren: Bool

ItemProperty:
  product:
    value: Maybe Xml.Element
    name: QName
    description: Maybe Text
    itemPath: Maybe Text
    itemName: Maybe Text
    resultId: Maybe QName

BrowseResponse:
  product:
    browseResult: Maybe ReplyBase
    elements: Vector BrowseElement
    errors: Vector OpcError
    continuationPoint: Maybe Text
    moreElements: Bool

GetProperties:
  product:
    itemIds: Vector ItemIdentifier
    propertyNames: Vector QName
    localeId: Maybe Text
    clientRequestHandle: Maybe Text
    itemPath: Maybe Text
    returnAllProperties: Bool
    returnPropertyValues: Bool
    returnErrorText: Bool

ItemIdentifier:
  product:
    itemPath: Maybe Text
    itemName: Maybe Text

PropertyReplyList:
  product:
    properties: Vector ItemProperty
    itemPath: Maybe Text
    itemName: Maybe Text
    resultId: Maybe QName

GetPropertiesResponse:
  product:
    getPropertiesResult: Maybe ReplyBase
    propertyLists: Vector PropertyReplyList
    errors: Vector OpcError

# Standard OPC result code as per the definition in the 3.1.9 section of the spec.
ResultCode:
  enum:
    ## Success
    # The value written was accepted but the output was clamped.
    # S_CLAMP
    - clamp
    # Not every detected change has been returned since the server's buffer reached its limit and had to purge out the oldest data.
    # S_DATAQUEUEOVERFLOW
    - dataQueueOverflow
    # The server does not support the requested rate but will use the closest available rate.
    # S_UNSUPPORTEDRATE
    - unsupportedRate
    ## Failure
    # The server denies access (read and/or write) to the specified item. This error is typically caused by Web Service security (e.g. globally disabled write capabilities).
    # E_ACCESS_DENIED
    - accessDenied
    # The server is currenly processing another polled refresh for one or more of the subscriptions.
    # E_BUSY
    - busy
    # Unspecified error.
    # E_FAIL
    - fail
    # The continuation point is not valid.
    # E_INVALIDCONTINUATIONPOINT
    - invalidContinuationPoint
    # The filter string is not valid.
    # E_INVALIDFILTER
    - invalidFilter
    # The hold time is too long (determined by server).
    # E_INVALIDHOLDTIME
    - invalidHoldTime
    # The item name does not conform the server’s syntax.
    # E_INVALIDITEMNAME
    - invalidItemName
    # The item path does not conform the server’s syntax.
    # E_INVALIDITEMPATH
    - invalidItemPath
    # The property id is not valid for the item.
    # E_INVALIDPID
    - invalidPid
    # An invalid set of subscription handles was passed to the request.
    # E_NOSUBSCRIPTION
    - noSubscription
    # The server does not support writing to the quality and/or timestamp.
    # E_NOTSUPPORTED
    - notSupported
    # Ran out of memory.
    # E_OUTOFMEMORY
    - outOfMemory
    # The value was out of range.
    # E_RANGE
    - range
    # The value is read only and may not be written to.
    # E_READONLY
    - readOnly
    # The operation could not complete due to an abnormal server state.
    # E_SERVERSTATE
    - serverState
    # The operation took too long to complete (determined by server).
    # E_TIMEDOUT
    - timedOut
    # The item name is no longer available in the server address space.
    # E_UNKNOWNITEMNAME
    - unknownItemName
    # The item path is no longer available in the server address space.
    # E_UNKNOWNITEMPATH
    - unknownItemPath
    # The value is write-only and may not be read from or returned as part of a write response.
    # E_WRITEONLY
    - writeOnly

QName:
  sum:
    namespaced:
      - Text
      - Text
    unnamespaced: Text
